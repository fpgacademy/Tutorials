# TCL File Generated by Component Editor 17.1.1
# Mon Sep 17 17:25:43 CDT 2018
# DO NOT MODIFY


# 
# mSGDMA_frontend "mSGDMA Frontend" v1.0
# JCJB 2018.09.17.17:25:43
# Custom frontend for fetching descriptors across high latency link and storing response information back to the host.
# 

# 
# request TCL package from ACDS 17.1
# 
package require -exact qsys 17.1


# 
# module mSGDMA_frontend
# 
set_module_property DESCRIPTION "Custom frontend for fetching descriptors across high latency link and storing response information back to the host."
set_module_property NAME mSGDMA_frontend
set_module_property VERSION 1.0
set_module_property INTERNAL false
set_module_property OPAQUE_ADDRESS_MAP true
set_module_property AUTHOR JCJB
set_module_property DISPLAY_NAME "mSGDMA Frontend"
set_module_property INSTANTIATE_IN_SYSTEM_MODULE true
set_module_property EDITABLE true
set_module_property REPORT_TO_TALKBACK false
set_module_property ALLOW_GREYBOX_GENERATION false
set_module_property REPORT_HIERARCHY false


# 
# file sets
# 
add_fileset QUARTUS_SYNTH QUARTUS_SYNTH "" ""
set_fileset_property QUARTUS_SYNTH TOP_LEVEL mSGDMA_frontend
set_fileset_property QUARTUS_SYNTH ENABLE_RELATIVE_INCLUDE_PATHS false
set_fileset_property QUARTUS_SYNTH ENABLE_FILE_OVERWRITE_MODE false
add_fileset_file mSGDMA_frontend_descriptor_format_pkg.sv SYSTEM_VERILOG PATH mSGDMA_frontend_descriptor_format_pkg.sv
add_fileset_file mSGDMA_frontend.sv SYSTEM_VERILOG PATH mSGDMA_frontend.sv TOP_LEVEL_FILE
add_fileset_file mSGDMA_descriptor_fetch_read_master.sv SYSTEM_VERILOG PATH mSGDMA_descriptor_fetch_read_master.sv
add_fileset_file mSGDMA_descriptor_store_write_master.sv SYSTEM_VERILOG PATH mSGDMA_descriptor_store_write_master.sv


add_fileset SIM_VERILOG SIM_VERILOG "" ""
set_fileset_property SIM_VERILOG TOP_LEVEL mSGDMA_frontend
set_fileset_property SIM_VERILOG ENABLE_RELATIVE_INCLUDE_PATHS false
set_fileset_property SIM_VERILOG ENABLE_FILE_OVERWRITE_MODE false
add_fileset_file mSGDMA_frontend_descriptor_format_pkg.sv SYSTEM_VERILOG PATH mSGDMA_frontend_descriptor_format_pkg.sv
add_fileset_file mSGDMA_frontend.sv SYSTEM_VERILOG PATH mSGDMA_frontend.sv
add_fileset_file mSGDMA_descriptor_fetch_read_master.sv SYSTEM_VERILOG PATH mSGDMA_descriptor_fetch_read_master.sv
add_fileset_file mSGDMA_descriptor_store_write_master.sv SYSTEM_VERILOG PATH mSGDMA_descriptor_store_write_master.sv


add_fileset SIM_VHDL SIM_VHDL "" ""
set_fileset_property SIM_VHDL TOP_LEVEL mSGDMA_frontend
set_fileset_property SIM_VHDL ENABLE_RELATIVE_INCLUDE_PATHS false
set_fileset_property SIM_VHDL ENABLE_FILE_OVERWRITE_MODE false
add_fileset_file mSGDMA_frontend_descriptor_format_pkg.sv SYSTEM_VERILOG PATH mSGDMA_frontend_descriptor_format_pkg.sv
add_fileset_file mSGDMA_frontend.sv SYSTEM_VERILOG PATH mSGDMA_frontend.sv
add_fileset_file mSGDMA_descriptor_fetch_read_master.sv SYSTEM_VERILOG PATH mSGDMA_descriptor_fetch_read_master.sv
add_fileset_file mSGDMA_descriptor_store_write_master.sv SYSTEM_VERILOG PATH mSGDMA_descriptor_store_write_master.sv



set_module_property ELABORATION_CALLBACK elaborate_me
set_module_property VALIDATION_CALLBACK validate_me


# 
# parameters
# 
add_parameter ADDRESS_WIDTH INTEGER 48
set_parameter_property ADDRESS_WIDTH DEFAULT_VALUE 48
set_parameter_property ADDRESS_WIDTH DISPLAY_NAME "Fetch/Store Address Width"
set_parameter_property ADDRESS_WIDTH UNITS None
set_parameter_property ADDRESS_WIDTH ALLOWED_RANGES 10:64
set_parameter_property ADDRESS_WIDTH HDL_PARAMETER true


# the RTL will only be tested with burst lengths of 4 so making this invisible
add_parameter BURST_WIDTH INTEGER 3
set_parameter_property BURST_WIDTH DEFAULT_VALUE 3
set_parameter_property BURST_WIDTH DISPLAY_NAME BURST_WIDTH
set_parameter_property BURST_WIDTH UNITS None
set_parameter_property BURST_WIDTH ALLOWED_RANGES 1:8
set_parameter_property BURST_WIDTH HDL_PARAMETER true
set_parameter_property BURST_WIDTH VISIBLE false


# displayed settings will be 2^FETCH_FIFO_DEPTH_LOG2
add_parameter FETCH_FIFO_DEPTH_LOG2 INTEGER 6
set_parameter_property FETCH_FIFO_DEPTH_LOG2 DEFAULT_VALUE 6
set_parameter_property FETCH_FIFO_DEPTH_LOG2 DISPLAY_NAME "Fetch FIFO Depth"
set_parameter_property FETCH_FIFO_DEPTH_LOG2 UNITS None
set_parameter_property FETCH_FIFO_DEPTH_LOG2 ALLOWED_RANGES { "4:16 entries" "5:32 entries" "6:64 entries" "7:128 entries" "8:256 entries" "9:512 entries" "10:1024 entries" }
set_parameter_property FETCH_FIFO_DEPTH_LOG2 HDL_PARAMETER true


# displayed settings will be 2^STORE_FIFO_DEPTH_LOG2, this parameter should be at least 4x 2^FETCH_FIFO_DEPTH_LOG2
add_parameter STORE_FIFO_DEPTH_LOG2 INTEGER 4
set_parameter_property STORE_FIFO_DEPTH_LOG2 DEFAULT_VALUE 4
set_parameter_property STORE_FIFO_DEPTH_LOG2 DISPLAY_NAME "Store FIFO Depth"
set_parameter_property STORE_FIFO_DEPTH_LOG2 UNITS None
set_parameter_property STORE_FIFO_DEPTH_LOG2 ALLOWED_RANGES { "2:4 entries" "3:8 entries" "4:16 entries" "5:32 entries" "6:64 entries" "7:128 entries" "8:256 entries" }
set_parameter_property STORE_FIFO_DEPTH_LOG2 HDL_PARAMETER true


add_parameter IRQ_ENABLE INTEGER 1
set_parameter_property IRQ_ENABLE DEFAULT_VALUE 1
set_parameter_property IRQ_ENABLE DISPLAY_NAME "Interrupt Enable"
set_parameter_property IRQ_ENABLE UNITS None
set_parameter_property IRQ_ENABLE HDL_PARAMETER true
set_parameter_property IRQ_ENABLE DISPLAY_HINT boolean

# 
# display items
# 


# 
# connection point clock
# 
add_interface clock clock end
set_interface_property clock ENABLED true
set_interface_property clock EXPORT_OF ""
set_interface_property clock PORT_NAME_MAP ""
set_interface_property clock CMSIS_SVD_VARIABLES ""
set_interface_property clock SVD_ADDRESS_GROUP ""

add_interface_port clock clk clk Input 1


# 
# connection point reset
# 
add_interface reset reset end
set_interface_property reset associatedClock clock
set_interface_property reset synchronousEdges BOTH
set_interface_property reset ENABLED true
set_interface_property reset EXPORT_OF ""
set_interface_property reset PORT_NAME_MAP ""
set_interface_property reset CMSIS_SVD_VARIABLES ""
set_interface_property reset SVD_ADDRESS_GROUP ""

add_interface_port reset reset reset Input 1


# 
# connection point csr_slave
# 
add_interface csr_slave avalon end
set_interface_property csr_slave addressGroup 0
set_interface_property csr_slave addressUnits WORDS
set_interface_property csr_slave associatedClock clock
set_interface_property csr_slave associatedReset reset
set_interface_property csr_slave bitsPerSymbol 8
set_interface_property csr_slave bridgedAddressOffset ""
set_interface_property csr_slave bridgesToMaster ""
set_interface_property csr_slave burstOnBurstBoundariesOnly false
set_interface_property csr_slave burstcountUnits WORDS
set_interface_property csr_slave explicitAddressSpan 0
set_interface_property csr_slave holdTime 0
set_interface_property csr_slave linewrapBursts false
set_interface_property csr_slave maximumPendingReadTransactions 0
set_interface_property csr_slave maximumPendingWriteTransactions 0
set_interface_property csr_slave minimumResponseLatency 1
set_interface_property csr_slave readLatency 1
set_interface_property csr_slave readWaitTime 1
set_interface_property csr_slave setupTime 0
set_interface_property csr_slave timingUnits Cycles
set_interface_property csr_slave transparentBridge false
set_interface_property csr_slave waitrequestAllowance 0
set_interface_property csr_slave writeWaitTime 0
set_interface_property csr_slave ENABLED true
set_interface_property csr_slave EXPORT_OF ""
set_interface_property csr_slave PORT_NAME_MAP ""
set_interface_property csr_slave CMSIS_SVD_VARIABLES ""
set_interface_property csr_slave SVD_ADDRESS_GROUP ""

add_interface_port csr_slave s_address address Input 3
add_interface_port csr_slave s_read read Input 1
add_interface_port csr_slave s_readdata readdata Output 64
add_interface_port csr_slave s_write write Input 1
add_interface_port csr_slave s_writedata writedata Input 64
add_interface_port csr_slave s_byteenable byteenable Input 8
set_interface_assignment csr_slave embeddedsw.configuration.isFlash 0
set_interface_assignment csr_slave embeddedsw.configuration.isMemoryDevice 0
set_interface_assignment csr_slave embeddedsw.configuration.isNonVolatileStorage 0
set_interface_assignment csr_slave embeddedsw.configuration.isPrintableDevice 0


# 
# connection point descriptor_fetch_master
# 
add_interface descriptor_fetch_master avalon start
set_interface_property descriptor_fetch_master addressGroup 0
set_interface_property descriptor_fetch_master addressUnits SYMBOLS
set_interface_property descriptor_fetch_master associatedClock clock
set_interface_property descriptor_fetch_master associatedReset reset
set_interface_property descriptor_fetch_master bitsPerSymbol 8
set_interface_property descriptor_fetch_master burstOnBurstBoundariesOnly false
set_interface_property descriptor_fetch_master burstcountUnits WORDS
set_interface_property descriptor_fetch_master doStreamReads false
set_interface_property descriptor_fetch_master doStreamWrites false
set_interface_property descriptor_fetch_master holdTime 0
set_interface_property descriptor_fetch_master linewrapBursts false
set_interface_property descriptor_fetch_master maximumPendingReadTransactions 0
set_interface_property descriptor_fetch_master maximumPendingWriteTransactions 0
set_interface_property descriptor_fetch_master minimumResponseLatency 1
set_interface_property descriptor_fetch_master readLatency 0
set_interface_property descriptor_fetch_master readWaitTime 1
set_interface_property descriptor_fetch_master setupTime 0
set_interface_property descriptor_fetch_master timingUnits Cycles
set_interface_property descriptor_fetch_master waitrequestAllowance 0
set_interface_property descriptor_fetch_master writeWaitTime 0
set_interface_property descriptor_fetch_master ENABLED true
set_interface_property descriptor_fetch_master EXPORT_OF ""
set_interface_property descriptor_fetch_master PORT_NAME_MAP ""
set_interface_property descriptor_fetch_master CMSIS_SVD_VARIABLES ""
set_interface_property descriptor_fetch_master SVD_ADDRESS_GROUP ""

# need to hardcode the data and byte enable widths since they were not pulled out of the structure file properly by component editor
add_interface_port descriptor_fetch_master m_fetch_address address Output "((ADDRESS_WIDTH - 1)) - (0) + 1"
add_interface_port descriptor_fetch_master m_fetch_burst burstcount Output "((BURST_WIDTH - 1)) - (0) + 1"
#add_interface_port descriptor_fetch_master m_fetch_byteenable byteenable Output "(((DESCRIPTOR_FORMAT_A_WIDTH / 8) - 1)) - (0) + 1"
add_interface_port descriptor_fetch_master m_fetch_byteenable byteenable Output 64
add_interface_port descriptor_fetch_master m_fetch_read read Output 1
#add_interface_port descriptor_fetch_master m_fetch_readdata readdata Input -1
add_interface_port descriptor_fetch_master m_fetch_readdata readdata Input 512
add_interface_port descriptor_fetch_master m_fetch_readdatavalid readdatavalid Input 1
add_interface_port descriptor_fetch_master m_fetch_waitrequest waitrequest Input 1


# 
# connection point descriptor_store_master
# 
add_interface descriptor_store_master avalon start
set_interface_property descriptor_store_master addressGroup 0
set_interface_property descriptor_store_master addressUnits SYMBOLS
set_interface_property descriptor_store_master associatedClock clock
set_interface_property descriptor_store_master associatedReset reset
set_interface_property descriptor_store_master bitsPerSymbol 8
set_interface_property descriptor_store_master burstOnBurstBoundariesOnly false
set_interface_property descriptor_store_master burstcountUnits WORDS
set_interface_property descriptor_store_master doStreamReads false
set_interface_property descriptor_store_master doStreamWrites false
set_interface_property descriptor_store_master holdTime 0
set_interface_property descriptor_store_master linewrapBursts false
set_interface_property descriptor_store_master maximumPendingReadTransactions 0
set_interface_property descriptor_store_master maximumPendingWriteTransactions 0
set_interface_property descriptor_store_master minimumResponseLatency 1
set_interface_property descriptor_store_master readLatency 0
set_interface_property descriptor_store_master readWaitTime 1
set_interface_property descriptor_store_master setupTime 0
set_interface_property descriptor_store_master timingUnits Cycles
set_interface_property descriptor_store_master waitrequestAllowance 0
set_interface_property descriptor_store_master writeWaitTime 0
set_interface_property descriptor_store_master ENABLED true
set_interface_property descriptor_store_master EXPORT_OF ""
set_interface_property descriptor_store_master PORT_NAME_MAP ""
set_interface_property descriptor_store_master CMSIS_SVD_VARIABLES ""
set_interface_property descriptor_store_master SVD_ADDRESS_GROUP ""

# need to hardcode the data and byte enable widths since they were not pulled out of the structure file properly by component editor
add_interface_port descriptor_store_master m_store_address address Output "((ADDRESS_WIDTH - 1)) - (0) + 1"
add_interface_port descriptor_store_master m_store_burst burstcount Output "((BURST_WIDTH - 1)) - (0) + 1"
#add_interface_port descriptor_store_master m_store_byteenable byteenable Output "(((DESCRIPTOR_FORMAT_A_WIDTH / 8) - 1)) - (0) + 1"
add_interface_port descriptor_store_master m_store_byteenable byteenable Output 64
add_interface_port descriptor_store_master m_store_waitrequest waitrequest Input 1
add_interface_port descriptor_store_master m_store_write write Output 1
#add_interface_port descriptor_store_master m_store_writedata writedata Output "((DESCRIPTOR_FORMAT_A_WIDTH - 1)) - (0) + 1"
add_interface_port descriptor_store_master m_store_writedata writedata Output 512


# 
# connection point irq
# 
add_interface irq interrupt end
set_interface_property irq associatedClock clock
set_interface_property irq bridgedReceiverOffset ""
set_interface_property irq bridgesToReceiver ""
set_interface_property irq ENABLED true
set_interface_property irq EXPORT_OF ""
set_interface_property irq PORT_NAME_MAP ""
set_interface_property irq CMSIS_SVD_VARIABLES ""
set_interface_property irq SVD_ADDRESS_GROUP ""

add_interface_port irq irq irq Output 1


# 
# connection point descriptor_source
# 
add_interface descriptor_source avalon_streaming start
set_interface_property descriptor_source associatedClock clock
set_interface_property descriptor_source associatedReset reset
set_interface_property descriptor_source dataBitsPerSymbol 256
set_interface_property descriptor_source errorDescriptor ""
set_interface_property descriptor_source firstSymbolInHighOrderBits true
set_interface_property descriptor_source maxChannel 0
#set_interface_property descriptor_source readyAllowance 0
set_interface_property descriptor_source readyLatency 0
set_interface_property descriptor_source ENABLED true
set_interface_property descriptor_source EXPORT_OF ""
set_interface_property descriptor_source PORT_NAME_MAP ""
set_interface_property descriptor_source CMSIS_SVD_VARIABLES ""
set_interface_property descriptor_source SVD_ADDRESS_GROUP ""

add_interface_port descriptor_source src_descriptor_data data Output 256
add_interface_port descriptor_source src_descriptor_ready ready Input 1
add_interface_port descriptor_source src_descriptor_valid valid Output 1


# 
# connection point response_sink
# 
add_interface response_sink avalon_streaming end
set_interface_property response_sink associatedClock clock
set_interface_property response_sink associatedReset reset
set_interface_property response_sink dataBitsPerSymbol 256
set_interface_property response_sink errorDescriptor ""
set_interface_property response_sink firstSymbolInHighOrderBits true
set_interface_property response_sink maxChannel 0
#set_interface_property response_sink readyAllowance 0
set_interface_property response_sink readyLatency 0
set_interface_property response_sink ENABLED true
set_interface_property response_sink EXPORT_OF ""
set_interface_property response_sink PORT_NAME_MAP ""
set_interface_property response_sink CMSIS_SVD_VARIABLES ""
set_interface_property response_sink SVD_ADDRESS_GROUP ""

add_interface_port response_sink snk_response_data data Input 256
add_interface_port response_sink snk_response_ready ready Output 1
add_interface_port response_sink snk_response_valid valid Input 1



proc validate_me {}  {

  if { [expr [get_parameter_value STORE_FIFO_DEPTH_LOG2] + 2] < [get_parameter_value FETCH_FIFO_DEPTH_LOG2] }  {
    send_message Info "It is recommended to set Store FIFO Depth to be at least 1/4th of Fetch FIFO Depth."
  }

}


proc elaborate_me {}  { 

  if { [get_parameter_value IRQ_ENABLE] == 1 } {
    set_interface_property irq ENABLED true
  } else {
    set_interface_property irq ENABLED false
  }

}